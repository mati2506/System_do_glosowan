apt update
apt install ca-certificates apt-transport-https lsb-release gnupg curl nano unzip -y
apt install software-properties-common -y
add-apt-repository ppa:ondrej/php
apt update
apt install apache2 -y
apt install php7.4 php7.4-cli php7.4-common php7.4-curl php7.4-gd php7.4-intl php7.4-json php7.4-mbstring php7.4-mysql php7.4-opcache php7.4-readline php7.4-xml php7.4-xsl php7.4-zip php7.4-bz2 libapache2-mod-php7.4 -y
apt install mariadb-server mariadb-client -y
mysql_secure_installation
cd /usr/share
wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.zip -O phpmyadmin.zip
unzip phpmyadmin.zip
rm phpmyadmin.zip
mv phpMyAdmin-*-all-languages phpmyadmin
chmod -R 0755 phpmyadmin
nano /etc/apache2/conf-available/phpmyadmin.conf
# phpMyAdmin Apache configuration

Alias /phpmyadmin /usr/share/phpmyadmin

<Directory /usr/share/phpmyadmin>
    Options SymLinksIfOwnerMatch
    DirectoryIndex index.php
</Directory>

# Disallow web access to directories that don't need it
<Directory /usr/share/phpmyadmin/templates>
    Require all denied
</Directory>
<Directory /usr/share/phpmyadmin/libraries>
    Require all denied
</Directory>
<Directory /usr/share/phpmyadmin/setup/lib>
    Require all denied
</Directory>

a2enconf phpmyadmin
systemctl reload apache2
mkdir /usr/share/phpmyadmin/tmp/
chown -R www-data:www-data /usr/share/phpmyadmin/tmp/

NOT SURE WHICH ONE YET
Method 1 - Enabling root login via password authentication (not recommended on production systems): Log in to your MariaDB server using the command mysql -u root and then execute the commands UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE user = 'root' AND plugin = 'unix_socket'; as well as FLUSH PRIVILEGES;. This will change the authentication plugin of the root user from the UNIX socket back to standard authentication. Finally leave the MariaDB console with the command exit.
Method 2 - Create an additional user with all permissions (recommended): Log in to your MariaDB server using the command mysql -u root and then execute the commands CREATE USER 'username'@'localhost' IDENTIFIED BY 'password'; as well as GRANT ALL PRIVILEGES ON *.* TO 'username'@'localhost' WITH GRANT OPTION;. Replace "username" and "password" with your desired username and password. Finally close the MariaDB console with the command exit. Then you can log in to the MariaDB server with the newly created user (e.g. via phpMyAdmin)


$cfg['Servers'][$i]['auth_type'] = 'config';
$cfg['Servers'][$i]['user'] = 'root';
$cfg['Servers'][$i]['password'] = ''; 
https://www.bennetrichter.de/en/tutorials/apache2-php7-mariadb-phpmyadmin/


git config --global user.name "mk44413"
git config --global user.email mk44413@zut.edu.pl
git clone https://git.wi.zut.edu.pl/mk44413/ipz_voting_system.git

sudo add-apt-repository ppa:deadsnakes/ppa   
sudo apt-get update   
sudo apt install python3.7 -y
sudo apt-get install python3.7-dev
sudo apt install libpython3.7-dev
sudo apt-install python3.7-venv
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip
pip install Flask
pip install flask_mysqldb
pip install flask_mail
pip install numpy
export FLASK_APP=views.py
flask run
